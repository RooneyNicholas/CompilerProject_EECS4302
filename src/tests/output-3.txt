CALL:[function main0],[]
WRIT:[declaration ID: ten, type: int32, value:[literal Integer: 10]]
EVAL:[declaration ID: ten, type: int32, value:[literal Integer: 10]]
WRIT:[declaration ID: third, type: double, value:[call testFunction[var int32 id=ten][literal Real: 20.0]]]
CALL:[function testFunction],[[declaration ID: param1, type: int32, value:[literal Integer: 10]], [declaration ID: param2, type: double, value:[literal Real: 20.0]]]
WRIT:[declaration ID: first, type: double]
EVAL:[declaration ID: first, type: double]
WRIT:[declaration ID: second, type: double]
EVAL:[declaration ID: second, type: double]
WRIT:[ifthen: [[var double id=param2] <= [literal Integer: 10]]]
EVAL:[ifthen: [literal Bool: false]]
WRIT:[ifthen: [[var double id=param2] > [literal Integer: 10]]]
EVAL:[ifthen: [literal Bool: true]]
WRIT:[[var double id=second] = [[var int32 id=param1] * [literal Integer: 10]]]
EVAL:[[var double id=second] = [literal Real: 100]]
WRIT:[[var double id=first] = [[var int32 id=param1] + [var double id=second]]]
EVAL:[[var double id=first] = [literal Real: 110]]
WRIT:[return [var double id=first]]
EVAL:[return [literal Real: 110]]
EVAL:[declaration ID: third, type: double, value:[literal Real: 110]]
{[function main0]=[complete, complete], [function testFunction]=[complete, complete, only false was evaluated, not Evaluated, not Evaluated, not Evaluated, not Evaluated, only true was evaluated, complete, complete, complete]}
